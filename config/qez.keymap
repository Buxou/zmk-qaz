#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NUM_SYM 1
#define NAV     2
#define NUM     3
#define SYM     4

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp Q      &kp W  &kp E         &kp R  &kp T                 &kp Y  &kp U          &kp I            &kp O      &kp P
  &kp A      &kp S  &kp D         &kp F  &kp G                 &kp H  &kp J          &kp K            &kp L      &kp SEMI
  &kp Z             &kp X         &kp C  &lt 3 V               &kp B  &lt 4 N        &kp M            &kp COMMA  &kp DOT
  &kp LCTRL         &lt 2 ESCAPE         &mt LEFT_SHIFT SPACE         &mt TAB ENTER  &lt 1 BACKSPACE             &kp LALT
            >;
        };

        sym_num {
            bindings = <
  &mt F12 F1  &kp F2  &kp F3    &kp F4      &kp F5       &kp F6     &kp F7         &kp F8        &kp F9                &mt F11 F10
  &kp EXCL    &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
  &kp N1              &kp N2    &kp N3      &kp N4       &kp N5     &kp N6         &kp N7        &kp N8                &mt N0 N9
  &trans              &trans                &trans                  &trans         &trans                              &trans
            >;
        };

        num_sys {
            bindings = <
  &mt KP_NUMLOCK KP_SLASH   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS     &kp C_VOLUME_UP  &kp HOME           &kp UP          &kp PAGE_UP    &mt CAPSLOCK SCROLLLOCK
  &kp KP_MULTIPLY           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS      &kp C_MUTE       &kp LEFT           &kp DOWN_ARROW  &kp RIGHT      &kp INSERT
  &mt KP_EQUAL KP_NUMBER_0                   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT       &kp C_VOLUME_DOWN  &kp PSCRN       &kp PAGE_DOWN  &kp PAUSE_BREAK
  &trans                                     &trans                            &trans                            &trans             &trans                         &trans
            >;
        };

        adj {
            bindings = <
  &sys_reset    &bootloader   &studio_unlock  &none         &none       &none           &kp C_PREVIOUS  &kp C_STOP  &kp C_PLAY_PAUSE  &kp C_NEXT
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_CLR  &bt BT_CLR_ALL  &none           &none       &none             &none
  &none                       &none           &none         &none       &none           &none           &none       &none             &kp UNDERSCORE
  &none                       &none                         &none                       &none           &none                         &none
            >;
        };

        adj2 {
            bindings = <
  &none           &kp UP_ARROW    &none            &none  &none  &none  &none  &none           &kp UP_ARROW    &none
  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none  &none  &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
  &kp LG(R)                       &kp LS(LC(ESC))  &none  &none  &none  &none  &none           &none           &kp UNDERSCORE
  &none                           &none                   &none         &none  &none                           &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adj {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        adj2 {
            if-layers = <4>;
            then-layer = <4>;
        };
    };
};
